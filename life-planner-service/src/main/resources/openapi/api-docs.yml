openapi: 3.0.0
info:
  title: Analysis Service - OpenAPI 1.0
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/analysis
  - url: http://212.193.60.200:8080/api/analysis
  - url: http://212.193.63.232:8080/api/analysis
  - url: http://212.193.56.231:8080/api/analysis
tags:
  - name: Analyze
    description: Analyze API
  - name: Rule
    description: Rule API
  - name: Problem
    description: Problem API
  - name: SonarPlugin
    description: SonarPlugin API
paths:
  /v1/problem:
    post:
      operationId: createProblem
      summary: Create new problem
      tags:
        - Problem
      requestBody:
        description: Problem create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProblemDto'
        required: true
      responses:
        '201':
          description: Problem was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueId'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/allProblemsByTaskIds:
    post:
      summary: Find problems by task ids
      operationId: findAllProblemsByTaskIds
      tags:
        - Problem
      requestBody:
        description: Problem change request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskIdsDto'
      responses:
        '200':
          description: Problem was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemSmallDtoList'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/problems/{taskId}:
    get:
      summary: Find problems by task id
      operationId: findProblemsByTaskId
      tags:
        - Problem
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
            format: uuid
            nullable: false
        - in: query
          name: pageable
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Problems was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortProblemDtoList'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problems not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/problems/task:
    put:
      summary: Update task in problem ids
      operationId: updateProblemsTask
      tags:
        - Problem
      requestBody:
        description: Problem change request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskToProblemsDto'
      responses:
        '200':
          description: Problems was updated
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/problem/{issueId}:
    get:
      summary: Find problem by id
      operationId: findProblemById
      tags:
        - Problem
      parameters:
        - in: path
          name: issueId
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: Problem was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemWithContentDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
    put:
      summary: Change problem by id
      operationId: changeProblemById
      tags:
        - Problem
      parameters:
        - in: path
          name: issueId
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        description: Problem change request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProblemChangeRequest'
        required: true
      responses:
        '200':
          description: Problem was changed
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
    delete:
      summary: Delete problem by id
      operationId: deleteProblemById
      tags:
        - Problem
      parameters:
        - in: path
          name: issueId
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '204':
          description: Problem was deleted
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/problem/task:
    post:
      summary: Remove tasks from problems
      operationId: removeTasksFromProblems
      tags:
        - Problem
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
        required: true
      responses:
        '200':
          description: Tasks removed
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/problem/estimateanalyzer:
    get:
      summary: Count estimate analyzer by problem ids
      operationId: countEstimateAnalyzer
      tags:
        - Problem
      parameters:
        - in: query
          name: problemIds
          required: true
          schema:
            type: array
            nullable: false
            items:
              type: string
      responses:
        '200':
          description: Estimate analyzer was counted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateAnalyzer'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/issues/{repoId}:
    get:
      summary: Find list of problems
      operationId: getProblems
      tags:
        - Problem
      parameters:
        - in: path
          name: repoId
          required: true
          schema:
            type: string
            nullable: false
        - in: query
          name: problemFilters
          required: false
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemFilters'
        - in: query
          name: pageable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pageable'

      responses:
        '200':
          description: Problem was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesAndProblemsListInfoDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/shortIssues/{repoId}:
    get:
      summary: Short list of problems
      operationId: getShortProblems
      tags:
        - Problem
      parameters:
        - in: path
          name: repoId
          required: true
          schema:
            type: string
            nullable: false
        - in: query
          name: problemFilters
          required: false
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemFilters'
        - in: query
          name: pageable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pageable'

      responses:
        '200':
          description: Problem was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesAndShortProblemsListResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/similarproblems:
    get:
      summary: Find list of similar problems
      operationId: getSimilarProblems
      tags:
        - Problem
      parameters:
        - in: query
          name: repoId
          required: true
          schema:
            type: string
            nullable: false
        - in: query
          name: issueId
          required: true
          schema:
            type: string
            nullable: false
        - in: query
          name: pageable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pageable'

      responses:
        '200':
          description: Problem was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarProblemListDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/task/getAutoEstimation/{id}:
    get:
      operationId: getAutoEstimation
      summary: Get auto estimation
      tags:
        - Problem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
            nullable: false
      responses:
        '200':
          description: Got task or list of tasks containing query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoEstimationDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/severities:
    get:
      summary: Get human readable problem severities
      operationId: getHumanReadableSeverities
      tags:
        - Problem
      parameters:
        - in: query
          name: severity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeverityQuery'
      responses:
        '200':
          description: Human readable severities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HumanReadableSeverities'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/problem_types:
    get:
      summary: Get problem types
      operationId: getProblemTypes
      tags:
        - Problem
      responses:
        '200':
          description: Problem types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/problem_statuses:
    get:
      summary: Get problem statuses
      operationId: getProblemStatuses
      tags:
        - Problem
      responses:
        '200':
          description: Problem statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Problem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/analyze:
    get:
      tags:
        - Analyze
      summary: Get all analyze
      operationId: getAllAnalyze
      parameters:
        - in: query
          name: pageable
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Get all analyze
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeListDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
    post:
      tags:
        - Analyze
      summary: Create analyze
      operationId: createAnalyze
      parameters:
        - in: query
          name: pageable
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      requestBody:
        description: Problem change request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnalyzeRequest'
      responses:
        '200':
          description: Get all analyze
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemListInfoDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/analyze/branchIds/{repoId}:
    get:
      tags:
        - Analyze
      summary: Get branchIds of analyzes by branchIds of branches
      operationId: getBranchIds
      parameters:
        - in: path
          name: repoId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get branchIds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchIdsDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'


  /v1/analyze/{analyzeId}:
    get:
      tags:
        - Analyze
      summary: Get analyze
      operationId: getAnalyze
      parameters:
        - name: analyzeId
          in: path
          description: Get analyze
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get analyze
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
  /v1/qualitygates/defaultTrue:
    get:
      tags:
        - QualityGates
      summary: Get quality gate with default true
      operationId: getQualityGateByDefaultIsTrue
      responses:
        '200':
          description: Get all quality gates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityGatesDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/qualitygates/copy/{qualityGateId}:
    post:
      tags:
        - QualityGates
      summary: Copy quality gate
      operationId: copyQualityGatesById
      parameters:
        - in: path
          name: qualityGateId
          description: Quality gates id to update
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Copy quality gate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityGatesDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'


  /v1/qualitygates:
    post:
      operationId: createQualityGates
      summary: Create new quality gates
      tags:
        - QualityGates
      requestBody:
        description: Quality gates DTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQualityGatesDto'
        required: true
      responses:
        '201':
          description: created quality gates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityGatesDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500' :
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

    get:
      tags:
        - QualityGates
      summary: Get all quality gates
      operationId: getAll
      parameters:
        - in: query
          name: projectId
          required: false
          schema:
            type: string
        - in: query
          name: pageable
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Get all quality gates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityGatesListDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/qualitygates/{qualityGateId}:
    get:
      tags:
        - QualityGates
      summary: Get Quality gates
      operationId: getQualityGates
      parameters:
        - name: qualityGateId
          in: path
          description: Get Quality gates
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Get Quality gates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityGatesDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

    delete:
      tags:
        - QualityGates
      summary: Delete quality gates
      operationId: deleteQualityGates
      parameters:
        - name: qualityGateId
          in: path
          description: Quality gates id to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Delete Quality gates
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

    put:
      operationId: updateQualityGates
      summary: Update quality gates
      tags:
        - QualityGates
      parameters:
        - name: qualityGateId
          in: path
          description: Quality gates id to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Quality gates DTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualityGatesUpdateDto'
        required: true
      responses:
        '200':
          description: updated project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityGatesDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/condition/{conditionId}:
    get:
      tags:
        - Condition
      summary: Get condition
      operationId: getCondition
      parameters:
        - name: conditionId
          in: path
          description: Get condition
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Get condition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

    delete:
      tags:
        - Condition
      summary: Delete condition
      operationId: deleteCondition
      parameters:
        - name: conditionId
          in: path
          description: Condition id to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Delete condition
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
    put:
      operationId: updateCondition
      summary: Update condition
      tags:
        - Condition
      parameters:
        - name: conditionId
          in: path
          description: Condition id to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Condition DTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionDto'
        required: true
      responses:
        '200':
          description: updated condition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/rule:
    post:
      operationId: createRule
      summary: Create new rule
      tags:
        - Rule
      requestBody:
        description: Rule create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveRuleDto'
      responses:
        '201':
          description: Rule was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
    get:
      summary: Get list of rules
      operationId: findAllRules
      tags:
        - Rule
      parameters:
        - in: query
          name: pageable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pageable'
        - in: query
          name: ruleFilters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleFilters'
      responses:
        '200':
          description: Got list of all rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleListDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/rule/{ruleId}:
    get:
      summary: Find rule by id
      operationId: findRuleById
      tags:
        - Rule
      parameters:
        - in: path
          name: ruleId
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: Rule was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
    put:
      summary: Change rule by id
      operationId: changeRuleById
      tags:
        - Rule
      parameters:
        - in: path
          name: ruleId
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        description: Rule status change request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
      responses:
        '201':
          description: Rule status was changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
    delete:
      summary: Delete rule by id
      operationId: deleteRuleById
      tags:
        - Rule
      parameters:
        - in: path
          name: ruleId
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: Rule was deleted
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/profileanalyze:
    post:
      operationId: createProfileAnalyze
      summary: Create new profile analyze
      tags:
        - ProfileAnalyze
      requestBody:
        description: Profile Analyze DTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileAnalyzeDto'
        required: true
      responses:
        '201':
          description: created profile analyze
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAnalyzeDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
    get:
      tags:
        - ProfileAnalyze
      summary: Get all profile analyze
      operationId: getAllProfileAnalyze
      parameters:
        - in: query
          name: profileAnalyzeName
          required: false
          schema:
            type: string
        - in: query
          name: projectId
          required: false
          schema:
            type: string
        - in: query
          name: repositories
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: programmingLanguage
          required: false
          schema:
            type: array
            items:
              type: ProgrammingLanguage
        - in: query
          name: pageable
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Get all profile analyzes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAnalyzeListDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/profileanalyze/{profileAnalyzeId}:
    get:
      tags:
        - ProfileAnalyze
      summary: Get Profile analyze
      operationId: getProfileAnalyze
      parameters:
        - name: profileAnalyzeId
          in: path
          description: Get Profile analyze
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: pageable
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Get Profile analyze
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAnalyzeDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

    delete:
      tags:
        - ProfileAnalyze
      summary: Delete profile analyze
      operationId: deleteProfileAnalyze
      parameters:
        - name: profileAnalyzeId
          in: path
          description: Profile analyze id to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Delete Profile analyze
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

    put:
      operationId: updateProfileAnalyze
      summary: Update profile analyze
      tags:
        - ProfileAnalyze
      parameters:
        - name: profileAnalyzeId
          in: path
          description: Profile analyze id to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Profile analyze DTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileAnalyzeUpdateDto'
        required: true
      responses:
        '200':
          description: update Profile analyze
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAnalyzeUpdateResponseDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/profileanalyze/rule/{profileAnalyzeId}:
    put:
      operationId: updateProfileAnalyzeRules
      summary: Update profile analyze rules
      tags:
        - ProfileAnalyze
      parameters:
        - name: profileAnalyzeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Profile analyze DTO
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShortRuleDto'
        required: true
      responses:
        '200':
          description: update profile analyze rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAnalyzeDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/profileanalyze/project/{projectId}:
    get:
      tags:
        - ProfileAnalyze
      summary: Get all default profile analyzes by project
      operationId: GetAllDefaultProfileAnalyzesByProject
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get short profile analyzes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortProfileAnalyzeDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/rule/profileanalyze/{profileAnalyzeId}:
    get:
      summary: Find rules by profile analyze id
      operationId: findRulesByProfileAnalyzeId
      tags:
        - Rule
      parameters:
        - in: path
          name: profileAnalyzeId
          required: true
          schema:
            type: string
            format: uuid
            nullable: false
        - name: ruleName
          in: query
          required: false
          schema:
            type: string
        - name: problemType
          in: query
          required: false
          schema:
            type: array
            items:
              type: ProblemType
        - name: defaultSeverity
          in: query
          required: false
          schema:
            type: array
            items:
              type: Severity
        - in: query
          name: pageable
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Rules by profile analyze id was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleListDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/analyze/projectsInfo:
    get:
      tags:
        - Analyze
      summary: List of project
      operationId: getProjectsInfo
      parameters:
        - in: query
          name: project_id
          required: false
          schema:
            type: string
        - in: query
          name: owner_id
          required: false
          schema:
            type: string
            format: uuid
        - in: query
          name: project_name
          required: false
          schema:
            type: string
        - in: query
          name: pageable
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Get project info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInfoListDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/analyze/repositoryInfo/{projectId}:
    get:
      tags:
        - Analyze
      summary: List of repositories
      operationId: getRepositoriesInfo
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: repositoryName
          in: query
          required: false
          schema:
            type: string
        - name: status
          required: false
          in: query
          schema:
            type: string
        - name: programmingLanguages
          required: false
          in: query
          schema:
            type: array
            items:
              type: ProgrammingLanguage
        - in: query
          name: pageable
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Get repositories info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryInfoListDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/analyze/projects/{projectId}:
    get:
      tags:
        - Analyze
      summary: Project review
      operationId: getProjectInfo
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get project info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInfoDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/gitLabProject/{gitLabProjectId}:
    get:
      tags:
        - GitLabProject
      summary: Get GitLab project
      operationId: getGitLabProject
      parameters:
        - name: gitLabProjectId
          in: path
          description: Get GitLab project
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Get GitLab project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitLabProjectDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/gitLabProject:
    post:
      summary: Create new GitLab project
      operationId: createGitLabProject
      tags:
        - GitLabProject
      requestBody:
        description: GitLab project DTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGitLabProjectDto'
        required: true
      responses:
        '201':
          description: created GitLab project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitLabProjectDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
    get:
      summary: Get list of all GitLab projects
      operationId: findAllGitLabProjects
      tags:
        - GitLabProject
      parameters:
        - in: query
          name: pageable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Get list of all GitLab projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitLabProjectListDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/analyze/repository/{repositoryId}/last:
    get:
      tags:
        - Analyze
      summary: Repository review
      operationId: getLastAnalyzeByRepositoryId
      parameters:
        - name: repositoryId
          in: path
          description: Get repository id
          required: true
          schema:
            type: string
        - name: branchId
          in: query
          description: branch id
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Got analyze by repository id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v2/analyze/repository/{repositoryId}/last:
    get:
      tags:
        - Analyze
      summary: Repository review
      operationId: getReviewOfRepository
      parameters:
        - name: repositoryId
          in: path
          description: Get repository id
          required: true
          schema:
            type: string
        - name: branchId
          in: query
          description: branch id
          required: false
          schema:
            type: string
            format: uuid
        - name: newCode
          in: query
          description: new code
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Got review by repository id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewOfRepositoryDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/integrationSettings:
    post:
      operationId: createIntegrationSettings
      summary: Create new integration settings
      tags:
        - IntegrationSettings
      requestBody:
        description: Integration settings DTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIntegrationSettingsDto'
        required: true
      responses:
        '201':
          description: created integration settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationSettingsDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/integrationSettings/{integrationSettingsId}:
    get:
      tags:
        - IntegrationSettings
      summary: Get integration settings
      operationId: getIntegrationSettings
      parameters:
        - name: integrationSettingsId
          in: path
          description: Get integration settings
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Get integration settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationSettingsDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
  /batch/index:
    get:
      tags:
        - SonarPlugin
      summary: getBatchIndex
      operationId: getBatchIndex
      responses:
        200:
          description: 'OK'
          content:
            plain/text:
              schema:
                type: string
  /api/settings/values.protobuf:
    get:
      tags:
        - SonarPlugin
      summary: getSettingsValuesInProtobuf
      operationId: getSettingsValuesInProtobuf
      parameters:
        - in: query
          name: component
          required: false
          schema:
            type: string
      responses:
        200:
          description: 'OK'
          content:
            application/x-protobuf;charset=UTF-8:
              schema:
                type: object
            application/json;charset=UTF-8:
              schema:
                type: object
  /api/plugins/installed:
    get:
      tags:
        - SonarPlugin
      summary: getInstalledPlugins
      operationId: getInstalledPlugins
      responses:
        200:
          description: 'OK'
          content:
            application/json;charset=UTF-8:
              schema:
                type: object

  /api/qualityprofiles/search.protobuf:
    get:
      tags:
        - SonarPlugin
      summary: getQProfiles
      operationId: getQProfiles
      parameters:
        - in: query
          name: project
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ok'
          content:
            application/x-protobuf;charset=UTF-8:
              schema:
                type: object
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        401:
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        404:
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        405:
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /api/rules/search.protobuf:
    get:
      tags:
        - SonarPlugin
      summary: getRules
      operationId: getRules
      parameters:
        - in: query
          name: f
          required: true
          schema:
            type: array
            items:
              type: string
        - in: query
          name: activation
          required: true
          schema:
            type: boolean
        - in: query
          name: qprofile
          required: true
          schema:
            type: string
        - in: query
          name: ps
          required: true
          schema:
            type: integer
        - in: query
          name: p
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'OK'
          content:
            application/x-protobuf;charset=UTF-8:
              schema:
                type: object
            application/json;charset=UTF-8:
              schema:
                type: object
  /api/analysis_cache/get:
    get:
      tags:
        - SonarPlugin
      summary: getAnalysisCache
      operationId: getAnalysisCache
      parameters:
        - in: query
          name: project
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'OK'
          content:
            application/json;charset=UTF-8:
              schema:
                type: object
  /batch/project.protobuf:
    get:
      tags:
        - SonarPlugin
      summary: getBatch
      operationId: getBatch
      parameters:
        - in: query
          name: key
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'OK'
          content:
            application/x-protobuf;charset=UTF-8:
              schema:
                type: object
            application/json;charset=UTF-8:
              schema:
                type: object

  /static/csharp/{name}:
    get:
      tags:
        - SonarPlugin
      summary: file
      operationId: getCsharp
      parameters:
        - name: name
          in: path
          description: Get name of file
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'OK'
          content:
            application/zip;charset=UTF-8:
              schema:
                type: string
                format: binary

  /static/vbnet/{name}:
    get:
      tags:
        - SonarPlugin
      summary: file
      operationId: getVbnet
      parameters:
        - name: name
          in: path
          description: Get name of file
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'OK'
          content:
            application/zip;charset=UTF-8:
              schema:
                type: string
                format: binary

  /api/metrics/search:
    get:
      tags:
        - SonarPlugin
      summary: getMetrics
      operationId: getMetrics
      parameters:
        - in: query
          name: ps
          required: true
          schema:
            type: integer
        - in: query
          name: p
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'OK'
          content:
            application/json;charset=UTF-8:
              schema:
                type: object
  /api/ce/submit:
    post:
      tags:
        - SonarPlugin
      summary: postReport
      operationId: postReport
      parameters:
        - in: query
          name: projectKey
          required: true
          schema:
            type: string
      requestBody:
        description: body
        content:
          multipart/form-data;charset=utf-8:
            schema:
              type: object
              properties:
                report:
                  type: string
                  format: binary
      responses:
        200:
          description: 'OK'
          content:
            application/x-protobuf;charset=UTF-8:
              schema:
                type: object
  /api/server/version:
    get:
      tags:
        - SonarPlugin
      summary: getServerVersion
      operationId: getServerVersion
      responses:
        200:
          description: OK
          content:
            plain/text:
              schema:
                type: string
                default: '9.9.0.65466'
  /api/editions/is_valid_license:
    get:
      tags:
        - SonarPlugin
      summary: isValidLicense
      operationId: isValidLicense
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: ValidLicenseDto

  /api/settings/values:
    get:
      tags:
        - SonarPlugin
      summary: Get settings values
      operationId: getSettingsValues
      parameters:
        - in: query
          name: component
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'OK'
          content:
            application/x-protobuf;charset=UTF-8:
              schema:
                type: object
            application/json;charset=UTF-8:
              schema:
                type: object

  /api/qualityprofiles/search:
    get:
      tags:
        - SonarPlugin
      summary: Get quality profiles
      operationId: getQualityProfiles
      parameters:
        - in: query
          name: project
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'OK'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/QualityProfileListDto'

  /api/rules/search:
    get:
      tags:
        - SonarPlugin
      summary: Get rules search
      operationId: getRulesSearch
      parameters:
        - in: query
          name: f
          required: true
          schema:
            type: array
            items:
              type: string
        - in: query
          name: ps
          required: true
          schema:
            type: integer
        - in: query
          name: qprofile
          required: true
          schema:
            type: string
        - in: query
          name: p
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'OK'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RulesResponse'

  /api/languages/list:
    get:
      tags:
        - SonarPlugin
      summary: Get languages
      operationId: getLanguages
      responses:
        200:
          description: 'OK'
          content:
            application/x-protobuf;charset=UTF-8:
              schema:
                type: object
            application/json;charset=UTF-8:
              schema:
                type: object

  /v1/profileAnalyzeRepository/{profileAnalyzeId}:
    get:
      summary: Find all profile analyze repositories by programming language in profile analyze id
      operationId: findProfileAnalyzeRepositoriesByProgrammingLanguageInProfileAnalyzeId
      tags:
        - ProfileAnalyzeRepository
      parameters:
        - in: path
          name: profileAnalyzeId
          required: true
          schema:
            type: string
            format: uuid
            nullable: false
        - in: query
          name: pageable
          required: false
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Profile analyze repositories by programming language in profile analyze id was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAnalyzeRepositoryListDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Profile analyze repository not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/profileAnalyzeRepository/repository/{repositoryId}:
    get:
      summary: Create default profile analyze repositories by repository id
      operationId: createDefaultProfileAnalyzeRepositoriesByRepositoryId
      tags:
        - ProfileAnalyzeRepository
      parameters:
        - in: path
          name: repositoryId
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: Profile analyze repositories was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAnalyzeRepositoryListDto'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Profile analyze repository not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/profileAnalyzeProject/project/{projectId}:
    get:
      summary: Create default and built in profile analyze projects by project id
      operationId: createDefaultAndBuiltInProfileAnalyzeProjectsByProjectId
      tags:
        - ProfileAnalyzeProject
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: Profile analyze projects was created
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Profile analyze project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
    delete:
      tags:
        - ProfileAnalyzeProject
      summary: Delete all by project id
      operationId: deleteAllByProjectId
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Delete all by project id
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /v1/profileAnalyzeRepository/{repositoryId}:
    delete:
      summary: Delete profile analyzes by repository id
      operationId: deleteAllByRepositoryId
      tags:
        - ProfileAnalyzeRepository
      parameters:
        - in: path
          name: repositoryId
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '204':
          description: Delete profile analyzes
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Profile analyze repository not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '405':
          description: Method is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

components:
  schemas:
    AnalyzeDto:
      type: object
      properties:
        repositoryId:
          type: string
          description: Repository id
        url:
          type: string
        countCodeSmells:
          type: integer
          format: int64
        countBugs:
          type: integer
          format: int64
        duplication:
          type: integer
          format: int64
        countPercentCoverage:
          type: BigDecimal
        countCoverage:
          type: integer
        vulnerability:
          type: integer
          format: int64
        securityHotspot:
          type: integer
          format: int64
        percentDuplication:
          type: BigDecimal
        rowCount:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 256
        description:
          type: string
          maxLength: 1024
        techDebt:
          type: BigDecimal
        programmingLanguages:
          type: array
          items:
            type: ProgrammingLanguage
        repositoryStatus:
          type: string
          enum:
            - PASSED
            - FALSED
        analysisDate:
          type: string
          format: timestamp
        branchDto:
          type: BranchDto
        extTokenName:
          type: string
          description: token name
          maxLength: 256
        defaultBranchId:
          type: string
          format: uuid

    BranchDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        repoId:
          type: string
          nullable: false
        name:
          type: string
          nullable: false
          maxLength: 256
        status:
          type: string
          nullable: false
        createdAt:
          type: string
          format: timestamp
        updatedAt:
          type: string
          format: timestamp
        isDefault:
          type: boolean

    ProjectInfoListDto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProjectInfo'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    RepositoryInfoListDto:
      type: object
      properties:
        content:
          type: array
          items:
            type: RepositoryInfoDto
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    ProjectInfo:
      type: object
      properties:
        projectId:
          type: string
        countCodeSmells:
          type: integer
          format: int64
        countBugs:
          type: integer
          format: int64
        countCoverage:
          type: integer
          format: int64
        countPercentCoverage:
          type: BigDecimal
        percentDuplication:
          type: BigDecimal
        techDebt:
          type: BigDecimal
        vulnerability:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 256
        description:
          type: string
          maxLength: 1024
        projectOwnerId:
          type: string
          format: uuid
        firstName:
          type: string
          maxLength: 256
        lastName:
          type: string
          maxLength: 256
        projectStatus:
          type: string
          enum:
            - PASSED
            - FALSED
        securityHotspot:
          type: integer
          format: int64


    ProjectInfoDto:
      type: object
      properties:
        projectId:
          type: string
        countCodeSmells:
          type: integer
        countBugs:
          type: integer
        countPercentCoverage:
          type: BigDecimal
        duplication:
          type: integer
          format: int64
        countCoverage:
          type: Integer
        vulnerability:
          type: integer
        securityHotspot:
          type: integer
        percentDuplication:
          type: BigDecimal
        name:
          type: string
          maxLength: 256
        description:
          type: string
          maxLength: 1024
        ownerId:
          type: string
          format: uuid
        firstName:
          type: string
          maxLength: 256
        lastName:
          type: string
          maxLength: 256
        techDebt:
          type: BigDecimal
        countRepository:
          type: integer
        programmingLanguages:
          type: array
          items:
            type: ProgrammingLanguage
        severity:
          type: object
          additionalProperties:
            type: integer
            format: int64
        projectStatus:
          type: string
          enum:
            - PASSED
            - FALSED

    RepositoryInfoDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          maxLength: 256
        url:
          type: string
        ownerId:
          type: string
          format: uuid
        firstName:
          type: string
          maxLength: 256
        lastName:
          type: string
          maxLength: 256
        platform:
          type: string
        description:
          type: string
          maxLength: 1024
        projectId:
          type: string
        qualityGatesId:
          type: string
          format: uuid
        analyzeId:
          type: array
          items:
            type: string
            format: uuid
        integrationType:
          type: string
        extTokenName:
          type: string
          maxLength: 256
        defaultBranchId:
          type: string
          format: uuid
        integrationSettingsId:
          type: string
          format: uuid
        programmingLanguages:
          type: array
          items:
            type: ProgrammingLanguage
        securityHotspot:
          type: integer
          format: int64
        analysisDate:
          type: string
          format: timestamp
        codeSmells:
          type: integer
        bugs:
          type: integer
        countCoverage:
          type: integer
        countPercentCoverage:
          type: BigDecimal
        vulnerabilities:
          type: integer
        rowCount:
          type: integer
        techDebt:
          type: BigDecimal
        percentDuplication:
          type: BigDecimal
        repositoryStatus:
          type: string
          enum:
            - PASSED
            - FALSED
        project_name:
          type: string
          maxLength: 256

    CreateQualityGatesDto:
      type: object
      required:
        - qualityGatesName
      properties:
        qualityGatesName:
          type: string
          description: Quality gates name
          maxLength: 256
          nullable: false
        isDefault:
          type: boolean
          description: Status
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/ConditionDto'
        projectId:
          type: string
        appendCurrentRepos:
          type: boolean

    AnalyzeInfoDto:
      type: object
      required:
        - name
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDto'
          description: projects

    RepositoryAnalyzeInfoDto:
      type: object
      required:
        - name
      properties:
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryDto'
          description: repositories

    QualityGatesDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Quality gates id
        qualityGatesName:
          type: string
          description: Quality gates name
          maxLength: 256
        createdAt:
          type: string
          format: timestamp
          description: Quality gates creation date
        updatedAt:
          type: string
          format: timestamp
          description: Quality gates update date
        deletedAt:
          type: string
          format: timestamp
          description: Quality gates deleted date
        isDefault:
          type: boolean
          description: Status
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/ConditionDto'
        projectId:
          type: string
        isBuiltIn:
          type: boolean
        repositoryCount:
          type: integer
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/ShortRepositoryDto'

    QualityGatesUpdateDto:
      type: object
      properties:
        qualityGatesName:
          type: string
          description: Quality gates name
          maxLength: 256
        isDefault:
          type: boolean
          description: Status
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/ConditionDto'
        projectId:
          type: string
        isBuiltIn:
          type: boolean
        appendCurrentRepos:
          type: boolean

    ProjectDto:
      type: object
      properties:
        id:
          type: string
          description: Project id
        name:
          type: string
          description: Project name
          example: my project
          maxLength: 256
        description:
          type: string
          example: short description
          maxLength: 1024
          description: Project description
        ownerId:
          type: string
          format: uuid
          description: Project owner id
        createdAt:
          type: string
          format: timestamp
          description: Project creation date
        updatedAt:
          type: string
          format: timestamp
          description: Project update date
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryDto'

    RepositoryDto:
      type: object
      properties:
        id:
          type: string
          description: Repository id
        name:
          type: string
          description: Repository name
          maxLength: 256
        url:
          type: string
          description: Repository url
          maxLength: 500
        ownerId:
          type: string
          format: uuid
          description: Repository owner id
        platform:
          type: string
          description: Repository platform
          maxLength: 500
        description:
          type: string
          maxLength: 1024
          description: Repository description
        projectId:
          type: string
          description: Repository project id
        createdAt:
          type: string
          format: timestamp
          description: Repository creation date
        updatedAt:
          type: string
          format: timestamp
          description: Repository update date
        projectKey:
          type: string
          description: project key
        deletedAt:
          type: string
          format: timestamp
          description: Repository deleted date
        qualityGatesId:
          type: string
          format: uuid
          description: Repository quality gate
        analyzeId:
          type: array
          items:
            type: string
            format: uuid
          description: Repository analyze id
        integrationType:
          type: string
          description: integration type
          maxLength: 500
        extTokenName:
          type: string
          description: token name
          maxLength: 256
        defaultBranchId:
          type: string
          format: uuid
          description: Default branch id
        integrationSettingsId:
          type: string
          format: uuid
          description: Integration settings id
        programmingLanguages:
          type: array
          items:
            type: ProgrammingLanguage

    SaveRuleDto:
      type: object
      required:
        - name
        - programmingLanguage
        - problemType
        - defaultSeverity
        - ruleKey
      properties:
        name:
          type: string
          maxLength: 256
          nullable: false
          description: Rule name
        programmingLanguage:
          type: ProgrammingLanguage
          nullable: false
          description: Programming language
        description:
          type: string
          description: Rule description
          maxLength: 1024
        problemType:
          type: string
          enum:
            - CODE_SMELL
            - BUG
            - VULNERABILITY
            - DUPLICATION
            - SECURITY_HOTSPOT
          nullable: false
          description: Problem type
        defaultSeverity:
          type: string
          enum:
            - CRITICAL
            - BLOCKER
            - MAJOR
            - MINOR
            - INFO
          nullable: false
          description: Default severity of rule
        goodCodeExample:
          type: string
          description: Example of good code
        badCodeExample:
          type: string
          description: Example of bad code
        ruleKey:
          type: string
          maxLength: 50
          description: Rule key in plugin analyzator
        func:
          type: string
          description: Rule func
        linearDesc:
          type: string
          description: Rule linear desc
        linearOffset:
          type: string
          description: Rule linear offset
        linearFactor:
          type: string
          description: Rule linear factor
        constantCost:
          type: string
          description: Rule constant cost
        tags:
          type: array
          items:
            type: string
          description: Rule tags
        see:
          type: string
        exceptions:
          type: string

    RuleDto:
      type: object
      properties:
        ruleId:
          type: string
          description: Id rule
        name:
          type: string
          maxLength: 256
          description: Rule name
        programmingLanguage:
          type: ProgrammingLanguage
          description: Programming language
        description:
          type: string
          description: Rule description
          maxLength: 1024
        problemType:
          type: string
          enum:
            - CODE_SMELL
            - BUG
            - VULNERABILITY
            - DUPLICATION
            - SECURITY_HOTSPOT
          description: Problem type
        defaultSeverity:
          type: string
          enum:
            - CRITICAL
            - BLOCKER
            - MAJOR
            - MINOR
            - INFO
          description: Default severity of rule
        goodCodeExample:
          type: string
          description: Good code example
        badCodeExample:
          type: string
          description: Bad code example
        createdAt:
          type: string
          format: timestamp
          description: Rule creation time
        updatedAt:
          type: string
          format: timestamp
          description: Rule update time
        deletedAt:
          type: string
          format: timestamp
          description: Rule deletion time
        defaultIsActive:
          type: boolean
          description: Rule activation status
        ruleKey:
          type: string
          maxLength: 50
          description: Rule key in plugin analyzator
        func:
          type: string
          description: Rule func
        linearDesc:
          type: string
          description: Rule linear desc
        linearOffset:
          type: string
          description: Rule linear offset
        linearFactor:
          type: string
          description: Rule linear factor
        constantCost:
          type: string
          description: Rule constant cost
        tags:
          type: array
          items:
            type: string
          description: Rule tags
        see:
          type: string
        exceptions:
          type: string
        isActive:
          type: boolean
        ruleKeyCodeache:
          type: string

    ShortRuleDto:
      type: object
      properties:
        ruleId:
          type: string
        isActive:
          type: boolean

    ShortRepositoryDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          maxLength: 256

    ShortRepositoryDtoList:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ShortRepositoryDto'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    RuleDtoWithIsActiveField:
      type: object
      properties:
        ruleId:
          type: string
          description: Id rule
        name:
          type: string
          maxLength: 256
          description: Rule name
        programmingLanguage:
          type: ProgrammingLanguage
          description: Programming language
        description:
          type: string
          description: Rule description
          maxLength: 1024
        problemType:
          type: string
          enum:
            - CODE_SMELL
            - BUG
            - VULNERABILITY
            - DUPLICATION
            - SECURITY_HOTSPOT
          description: Problem type
        defaultSeverity:
          type: string
          enum:
            - CRITICAL
            - BLOCKER
            - MAJOR
            - MINOR
            - INFO
          description: Default severity of rule
        goodCodeExample:
          type: string
          description: Good code example
        badCodeExample:
          type: string
          description: Bad code example
        createdAt:
          type: string
          format: timestamp
          description: Rule creation time
        updatedAt:
          type: string
          format: timestamp
          description: Rule update time
        deletedAt:
          type: string
          format: timestamp
          description: Rule deletion time
        defaultIsActive:
          type: boolean
          description: Rule activation status
        ruleKey:
          type: string
          maxLength: 50
          description: Rule key in plugin analyzator
        func:
          type: string
          description: Rule func
        linearDesc:
          type: string
          description: Rule linear desc
        linearOffset:
          type: string
          description: Rule linear offset
        linearFactor:
          type: string
          description: Rule linear factor
        constantCost:
          type: string
          description: Rule constant cost
        tags:
          type: array
          items:
            type: string
          description: Rule tags
        see:
          type: string
        exceptions:
          type: string
        isActive:
          type: boolean

    Pageable:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        sort:
          type: Sort
    Sort:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    Order:
      type: object
      properties:
        direction:
          type: Direction
        property:
          type: string
        ignoreCase:
          type: boolean
        nullHandling:
          type: NullHandling

    ProfileAnalyzeListDto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProfileAnalyzeDto'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    QualityGatesListDto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/QualityGatesDto'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    RuleListDto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/RuleDto'
        totalPages:
          type: integer
        totalElements:
          type: integer
        last:
          type: boolean
        number:
          type: integer
        size:
          type: integer
        numberOfElements:
          type: integer
        first:
          type: boolean
        empty:
          type: boolean

    AnalyzeListDto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AnalyzeDto'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    Status:
      type: object
      properties:
        defaultIsActive:
          type: boolean
          nullable: false

    CreateProfileAnalyzeDto:
      type: object
      required:
        - name
        - programmingLanguage
        - projectId
        - default
      properties:
        name:
          type: string
          description: Profile analyze name
          maxLength: 256
          nullable: false
        description:
          type: string
          description: description of profile analyze
          maxLength: 1024
        programmingLanguage:
          type: ProgrammingLanguage
          nullable: false
        projectId:
          type: string
          nullable: false
        default:
          type: boolean
          nullable: false
        appendCurrentRepos:
          type: boolean


    ProfileAnalyzeDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Profile analyze id
        name:
          type: string
          description: Profile analyze name
          maxLength: 256
        programmingLanguage:
          type: ProgrammingLanguage
          nullable: false
          description: Programming language
        description:
          type: string
          description: Profile analyze description
          maxLength: 1024
        allActiveRulesCount:
          type: integer
          description: quantity of all active rules in profile analyze
        allInactiveRulesCount:
          type: integer
          description: quantity of all inactive rules in profile analyze
        allRulesCount:
          type: integer
          description: quantity of all rules in profile analyze
        bugsActiveRulesCount:
          type: integer
          description: quantity of all active bug-rules in profile analyze
        bugsInactiveRulesCount:
          type: integer
          description: quantity of all inactive bug-rules in profile analyze
        vulnerabilitiesActiveRulesCount:
          type: integer
          description: quantity of all active vulnerability-rules in profile analyze
        vulnerabilitiesInactiveRulesCount:
          type: integer
          description: quantity of all inactive vulnerablity-rules in profile analyze
        codeSmellsActiveRulesCount:
          type: integer
          description: quantity of all active codesmell-rules in profile analyze
        codeSmellsInactiveRulesCount:
          type: integer
          description: quantity of all active codesmell-rules in profile analyze
        duplicationActiveRulesCount:
          type: integer
          description: quantity of all active duplication-rules in profile analyze
        duplicationInactiveRulesCount:
          type: integer
          description: quantity of all active duplication-rules in profile analyze
        securityHotspotActiveRulesCount:
          type: integer
          description: quantity of all active securityHotspot-rules in profile analyze
        securityHotspotInactiveRulesCount:
          type: integer
          description: quantity of all active securityHotspot-rules in profile analyze
        createdAt:
          type: string
          format: timestamp
          description: Profile analyze creation date
        updatedAt:
          type: string
          format: timestamp
          description: Profile analyze update date
        deletedAt:
          type: string
          format: timestamp
          description: Profile analyze deleted date
        isBuiltIn:
          type: boolean
          description: Internal status
        isDefault:
          type: boolean
          description: Status by default
        rules:
          type: array
          items:
            $ref: '#/components/schemas/RuleDto'
        projectId:
          type: string
        projectName:
          type: string
          maxLength: 256
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/ShortRepositoryDto'
        repositoryCount:
          type: integer

    FileMetricsDto:
      type: object
      properties:
        repositoryId:
          type: string
        branchId:
          type: string
          format: uuid
        analyzeId:
          type: string
          format: uuid
        componentRef:
          type: integer
        name:
          type: string
        fileId:
          type: string
          format: uuid
        lines:
          type: integer
        cognitiveComplexity:
          type: integer
        analyzeDate:
          type: string
          format: timestamp

    ProfileAnalyzeUpdateDto:
      type: object
      properties:
        name:
          type: string
          description: Profile analyze name
          maxLength: 256
        description:
          type: string
          description: Profile analyze description
          maxLength: 1024
        isDefault:
          type: boolean
          description: Status by default
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/ShortRepositoryDto'
        appendCurrentRepos:
          type: boolean

    ProfileAnalyzeUpdateResponseDto:
      type: object
      properties:
        name:
          type: string
          description: Profile analyze name
          maxLength: 256
        description:
          type: string
          description: Profile analyze description
          maxLength: 1024
        isDefault:
          type: boolean
          description: Status by default
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/ShortRepositoryDto'

    ProfileAnalyzeRepositoryDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Profile analyze repository id
        repositoryId:
          type: string
        profileAnalyzeId:
          type: string
          format: uuid
        profileAnalyzeProgrammingLanguage:
          type: ProgrammingLanguage
          nullable: false
        updatedAt:
          type: string
          format: timestamp

    ProfileAnalyzeRepositoryListDto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProfileAnalyzeRepositoryDto'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    RepositoryListDto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryDto'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    ConditionDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Condition id
        metric:
          type: string
          description: Condition metric
          maxLength: 500
        operator:
          type: string
          description: Condition operator
          maxLength: 500
        value:
          type: integer
          description: Condition value
        justForNewCode:
          type: boolean
          description: Status for new code
        defaultSeverity:
          type: string
          enum:
            - CRITICAL
            - BLOCKER
            - MAJOR
            - MINOR
            - INFO

    ProfileAnalysisRuleOptionsDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ProfileAnalysisRuleOptions id
        ruleId:
          type: string
          description: Rule id
        analyzeProfileId:
          type: string
          format: uuid
          description: Analyze profile id
        isActive:
          type: boolean
          description: Activation status
        severity:
          type: string
          enum:
            - CRITICAL
            - BLOCKER
            - MAJOR
            - MINOR
            - INFO
        updatedAt:
          type: string
          format: timestamp

    GitLabProjectDto:
      type: object
      properties:
        id:
          type: integer
          description: GitLab project id
        name:
          type: string
          description: GitLab project name
          maxLength: 256
        createdAt:
          type: string
          format: timestamp
          description: GitLab project creation date
        updatedAt:
          type: string
          format: timestamp
          description: GitLab project update date
        integrationSettingsId:
          type: string
          format: uuid
          description: Integration settings id

    CreateGitLabProjectDto:
      type: object
      properties:
        id:
          type: integer
          description: GitLab project id
        integrationSettingsId:
          type: string
          format: uuid
          description: Integration settings id

    IntegrationSettingsDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Integration settings id
        web_url:
          type: string
          description: GitLab project web url
          maxLength: 500
        token:
          type: string
        repositoryId:
          type: string
          description: Repository id

    CreateIntegrationSettingsDto:
      type: object
      properties:
        web_url:
          type: string
          description: GitLab project web url
          maxLength: 500
        token:
          type: string
        repositoryId:
          type: string
          description: Repository id

    GitLabProjectListDto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/GitLabProjectDto'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    RuleFilters:
      type: object
      properties:
        programmingLanguage:
          type: array
          items:
            type: ProgrammingLanguage
        problemType:
          type: array
          items:
            type: string
            enum:
              - CODE_SMELL
              - BUG
              - VULNERABILITY
              - DUPLICATION
              - SECURITY_HOTSPOT
        name:
          type: string
          maxLength: 256
        profileAnalyzeId:
          type: string
          format: uuid
        defaultSeverity:
          type: array
          items:
            type: string
            enum:
              - CRITICAL
              - BLOCKER
              - MAJOR
              - MINOR
              - INFO


    ErrorResponseDto:
      type: object
      properties:
        message:
          type: string
          description: Error message
        code:
          type: integer
          description: Error status code
        traceId:
          type: string
          description: Trace Id

    ProblemListInfoDto:
      type: object
      required:
        - name
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDto'
          description: problems

    SimilarProblemListDto:
      type: object
      required:
        - name
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/SimilarProblemDto'
          description: problems

    SimilarProblemDto:
      type: object
      properties:
        issueId:
          type: string
          description: Problem identifier
        problemName:
          type: string
          maxLength: 256
          description: Problem name
        fileName:
          type: string
          maxLength: 256

    QualityProfileListDto:
      type: object
      required:
        - profiles
      properties:
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/QualityProfileDto'
          description: Quality Profiles
        actions:
          $ref: '#/components/schemas/Actions'

    QualityProfileDto:
      type: object
      required:
        - key
        - name
        - language
        - languageName
        - isInherited
        - isDefault
        - activeRuleCount
        - activeDeprecatedRuleCount
        - rulesUpdatedAt
        - isBuiltIn
      properties:
        key:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 256
        language:
          type: string
        languageName:
          type: string
          maxLength: 256
        isInherited:
          type: boolean
        parentKey:
          type: string
        parentName:
          type: string
          maxLength: 256
        isDefault:
          type: boolean
        activeRuleCount:
          type: integer
          format: int64
        activeDeprecatedRuleCount:
          type: integer
          format: int64
        rulesUpdatedAt:
          type: string
          format: timestamp
        userUpdatedAt:
          type: string
          format: timestamp
        lastUsed:
          type: string
          format: timestamp
        isBuiltIn:
          type: boolean
        actions:
          $ref: '#/components/schemas/QualityProfileActionsDto'

    Actions:
      type: object
      properties:
        create:
          type: boolean

    QualityProfileActionsDto:
      type: object
      properties:
        edit:
          type: boolean
        setAsDefault:
          type: boolean
        copy:
          type: boolean
        associateProjects:
          type: boolean
        delete:
          type: boolean

    FilesAndProblemsListInfoDto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/FileAndProblemsListInfoDto'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    FileAndProblemsListInfoDto:
      type: object
      properties:
        fileId:
          type: string
          format: uuid
        fileName:
          type: string
          maxLength: 256
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDto'
          description: problems

    CreateProblemDto:
      type: object
      required:
        - problemName
        - problemType
        - ruleKey
        - taskId
        - repoId
        - estimateAnalyzer
        - fileId
        - severity
        - startLine
        - endLine
        - startOffset
        - endOffset
        - idAnalyze
        - idAnalyzeLast
        - programmingLanguage
        - fileName
        - branchId
      properties:
        problemName:
          type: string
          maxLength: 256
          nullable: false
          description: Problem name
        problemType:
          type: string
          enum:
            - CODE_SMELL
            - BUG
            - VULNERABILITY
            - DUPLICATION
            - SECURITY_HOTSPOT
          nullable: false
          description: Problem type
        ruleKey:
          type: string
          maxLength: 50
          nullable: false
          description: Rule key in analyzer plugin
        taskId:
          type: string
          format: uuid
          nullable: false
          description: Task identifier
        repoId:
          type: string
          nullable: false
          description: Repository identifier
        estimateAnalyzer:
          type: number
          format: double
          nullable: false
          description: Estimation automatic in hours
        fileId:
          type: string
          format: uuid
          nullable: false
          description: File identifier
        severity:
          type: string
          enum:
            - CRITICAL
            - BLOCKER
            - MAJOR
            - MINOR
            - INFO
          nullable: false
          description: Severity
        startLine:
          type: integer
          nullable: false
          description: Initial line of code
        endLine:
          type: integer
          nullable: false
          description: Final line of code
        startOffset:
          type: integer
          nullable: false
          description: Start position in code
        endOffset:
          type: integer
          nullable: false
          description: End position in code
        idAnalyze:
          type: string
          format: uuid
          nullable: false
          description: Identifier of the analysis in which the problem was found
        idAnalyzeLast:
          type: string
          format: uuid
          nullable: false
          description: Identifier of the last analysis in which the problem was found
        programmingLanguage:
          type: ProgrammingLanguage
        fileName:
          type: string
          maxLength: 256
        branchId:
          type: string
          format: uuid
          nullable: false
        ruleId:
          type: integer

    ReviewOfRepositoryDto:
      type: object
      properties:
        repositoryId:
          type: string
        url:
          type: string
        countCodeSmells:
          type: integer
          format: int64
        countBugs:
          type: integer
          format: int64
        countPercentCoverage:
          type: BigDecimal
        countCoverage:
          type: integer
          format: int64
        vulnerability:
          type: integer
          format: int64
        securityHotspot:
          type: integer
          format: int64
        duplication:
          type: integer
          format: int64
        percentDuplication:
          type: BigDecimal
        name:
          type: String
          maxLength: 256
        description:
          type: String
          maxLength: 1024
        techDebt:
          type: BigDecimal
        programmingLanguages:
          type: array
          items:
            type: ProgrammingLanguage
        repositoryStatus:
          type: RepositoryStatus
        analysisDate:
          type: string
          format: timestamp
        rowCount:
          type: integer
          format: int64
        extTokenName:
          type: string
          description: token name
          maxLength: 256
        defaultBranchId:
          type: string
          format: uuid
        projectKey:
          type: String
        profileAnalyzes:
          type: array
          items:
            $ref: '#/components/schemas/ShortProfileAnalyzeDto'
        qualityGates:
          $ref: '#/components/schemas/ShortQualityGatesDto'

    ProblemDto:
      type: object
      properties:
        issueId:
          type: string
          description: Problem identifier
        problemName:
          type: string
          maxLength: 256
          description: Problem name
        problemType:
          type: string
          enum:
            - CODE_SMELL
            - BUG
            - VULNERABILITY
            - DUPLICATION
            - SECURITY_HOTSPOT
          description: Problem type
        ruleKey:
          type: string
          maxLength: 50
          description: Rule key in analyzer plugin
        taskId:
          type: string
          format: uuid
          description: Task identifier
        repoId:
          type: string
          description: Repository identifier
        createdAt:
          type: string
          format: timestamp
          description: Problem creation time
        updatedAt:
          type: string
          format: timestamp
          description: Problem update time
        deletedAt:
          type: string
          format: timestamp
          description: Problem deletion time
        estimateAnalyzer:
          type: number
          format: double
          description: Estimation automatic in hours
        fileId:
          type: string
          format: uuid
          description: File identifier
        severity:
          type: string
          enum:
            - CRITICAL
            - BLOCKER
            - MAJOR
            - MINOR
            - INFO
          description: Severity
        startLine:
          type: integer
          description: Initial line of code
        endLine:
          type: integer
          description: Final line of code
        startOffset:
          type: integer
          description: Start position in code
        endOffset:
          type: integer
          description: End position in code
        status:
          type: string
          enum:
            - OPEN
            - CONFIRM
            - RESOLVED
            - REOPENED
            - CLOSED
            - FALSE_POSITIVE
        statusDate:
          type: string
          format: timestamp
          description: Status date
        idAnalyze:
          type: string
          format: uuid
          description: Identifier of the analysis in which the problem was found
        idAnalyzeLast:
          type: string
          format: uuid
          description: Identifier of the last analysis in which the problem was found
        newCode:
          type: boolean
          description: Consider in new code
        programmingLanguage:
          type: ProgrammingLanguage
        fileName:
          type: string
          maxLength: 256
        taskNumber:
          type: integer
        problemNumber:
          type: string
        ruleId:
          type: string

    FilesAndShortProblemsListResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/FileAndShortProblemsListResponse'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    FileAndShortProblemsListResponse:
      type: object
      properties:
        fileId:
          type: string
          format: uuid
        fileName:
          type: string
          maxLength: 256
        content:
          type: array
          items:
            $ref: '#/components/schemas/ShortProblemResponse'
          description: problems

    ShortProblemResponse:
      type: object
      properties:
        fileId:
          type: string
          format: uuid
          description: File identifier
        fileName:
          type: string
          maxLength: 256
        issueId:
          type: string
          description: Problem identifier
        problemName:
          type: string
          maxLength: 256
          description: Problem name
        problemNumber:
          type: string
          description: Problem number

    ProblemWithContentDto:
      type: object
      properties:
        issueId:
          type: string
          description: Problem identifier
        problemName:
          type: string
          maxLength: 256
          description: Problem name
        problemType:
          type: string
          enum:
            - CODE_SMELL
            - BUG
            - VULNERABILITY
            - DUPLICATION
            - SECURITY_HOTSPOT
          description: Problem type
        ruleKey:
          type: string
          maxLength: 50
          description: Rule key in analyzer plugin
        taskId:
          type: string
          format: uuid
          description: Task identifier
        repoId:
          type: string
          description: Repository identifier
        createdAt:
          type: string
          format: timestamp
          description: Problem creation time
        updatedAt:
          type: string
          format: timestamp
          description: Problem update time
        deletedAt:
          type: string
          format: timestamp
          description: Problem deletion time
        estimateAnalyzer:
          type: number
          format: double
          description: Estimation automatic in hours
        fileId:
          type: string
          format: uuid
          description: File identifier
        severity:
          type: string
          enum:
            - CRITICAL
            - BLOCKER
            - MAJOR
            - MINOR
            - INFO
          description: Severity
        startLine:
          type: integer
          description: Initial line of code
        endLine:
          type: integer
          description: Final line of code
        startOffset:
          type: integer
          description: Start position in code
        endOffset:
          type: integer
          description: End position in code
        status:
          type: string
          enum:
            - OPEN
            - CONFIRM
            - RESOLVED
            - REOPENED
            - CLOSED
            - FALSE_POSITIVE
        statusDate:
          type: string
          format: timestamp
          description: Status date
        idAnalyze:
          type: string
          format: uuid
          description: Identifier of the analysis in which the problem was found
        idAnalyzeLast:
          type: string
          format: uuid
          description: Identifier of the last analysis in which the problem was found
        newCode:
          type: boolean
          description: Consider in new code
        programmingLanguage:
          type: ProgrammingLanguage
        fileName:
          type: string
          maxLength: 256
        code:
          type: string
          description: Content from file
        branchId:
          type: string
          format: uuid
          nullable: false
        ruleId:
          type: string
        problemNumber:
          type: string
        ruleKeyCodeache:
          type: string


    AnalyzeWithProblemsDto:
      type: object
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDto'
          description: problems
        analyze:
          $ref: '#/components/schemas/AnalyzeDto'

    ProblemChangeRequest:
      type: object
      properties:
        status:
          type: string
          enum:
            - OPEN
            - CONFIRM
            - RESOLVED
            - REOPENED
            - CLOSED
            - FALSE_POSITIVE
        taskId:
          type: string
          format: uuid
        newCode:
          type: boolean
    IssueId:
      type: string

    DbCleanerDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        weeksBeforeKeepingOnlyAnalysesWithVersion:
          type: integer
          nullable: false
        hoursBeforeKeepingOnlyOneSnapshotByDay:
          type: integer
          nullable: false
        daysBeforeDeletingClosedIssues:
          type: integer
          nullable: false
        weeksBeforeKeepingOnlyOneSnapshotByMonth:
          type: integer
          nullable: false
        weeksBeforeKeepingOnlyOneSnapshotByWeek:
          type: integer
          nullable: false
        weeksBeforeDeletingAllSnapshots:
          type: integer
          nullable: false

    AuthDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        gitlabUrl:
          type: string
          nullable: false
        gitlabAllowUsersToSignUp:
          type: boolean
          nullable: false
        githubWebUrl:
          type: string
          nullable: false
        gitlabGroupsSync:
          type: boolean
          nullable: false
        githubApiUrl:
          type: string
          nullable: false
        samlSignatureEnabled:
          type: boolean
          nullable: false
        bitbucketAllowUsersToSignUp:
          type: boolean
          nullable: false
        githubEnabled:
          type: boolean
          nullable: false
        bitbucketEnabled:
          type: boolean
          nullable: false
        samlEnabled:
          type: boolean
          nullable: false
        githubAllowUsersToSignUp:
          type: boolean
          nullable: false
        samlApplicationId:
          type: string
          nullable: false
        githubGroupsSync:
          type: boolean
          nullable: false
        samlProviderName:
          type: string
          nullable: false
          maxLength: 256
        gitlabEnabled:
          type: boolean
          nullable: false

    EmailDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        prefix:
          type: string
          nullable: false
        fromName:
          type: string
          nullable: false
          maxLength: 256
        from:
          type: string
          nullable: false

    AnalyzerCsDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        nugetPackageId:
          type: string
          nullable: false
        ruleNamespace:
          type: string
          nullable: false
        staticResourceName:
          type: string
          nullable: false
          maxLength: 256
        analyzerId:
          type: string
          nullable: false
        nugetPackageVersion:
          type: string
          nullable: false
        pluginVersion:
          type: string
          nullable: false
        pluginKey:
          type: string
          nullable: false

    AnalyzerVbnetDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        nugetPackageId:
          type: string
          nullable: false
        ruleNamespace:
          type: string
          nullable: false
        staticResourceName:
          type: string
          nullable: false
          maxLength: 256
        analyzerId:
          type: string
          nullable: false
        nugetPackageVersion:
          type: string
          nullable: false
        pluginVersion:
          type: string
          nullable: false
        pluginKey:
          type: string
          nullable: false

    CoreDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        startTime:
          type: string
          format: timestamp
          nullable: false
        coreId:
          type: string
          nullable: false

    CloudformationDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        activate:
          type: boolean
          nullable: false
        fileIdentifier:
          type: string
          nullable: false

    SuffixesDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        terraformFileSuffixes:
          type: array
          items:
            type: string
        javascript_file_suffixes:
          type: array
          items:
            type: string
        json_file_suffixes:
          type: array
          items:
            type: string
        yaml_file_suffixes:
          type: array
          items:
            type: string
        ruby_file_suffixes:
          type: array
          items:
            type: string
        java_file_suffixes:
          type: array
          items:
            type: string
        kotlin_file_suffixes:
          type: array
          items:
            type: string
        php_file_suffixes:
          type: array
          items:
            type: string
        xml_file_suffixes:
          type: array
          items:
            type: string
        python_file_suffixes:
          type: array
          items:
            type: string
        cs_file_suffixes:
          type: array
          items:
            type: string
        vbnet_file_suffixes:
          type: array
          items:
            type: string
        css_file_suffixes:
          type: array
          items:
            type: string
        html_file_suffixes:
          type: array
          items:
            type: string
        flex_file_suffixes:
          type: array
          items:
            type: string
        go_file_suffixes:
          type: array
          items:
            type: string
        scala_file_suffixes:
          type: array
          items:
            type: string
        typescript_file_suffixes:
          type: array
          items:
            type: string
        jsp_file_suffixes:
          type: array
          items:
            type: string

    ExclusionsDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        php_exclusions:
          type: array
          items:
            type: string
        go_exclusions:
          type: array
          items:
            type: string
        ruby_exclusions:
          type: array
          items:
            type: string

    LanguagesSettingsDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        vbnet_analyze_generated_code:
          type: boolean
          nullable: false
        vbnet_roslyn_ignore_issues:
          type: boolean
          nullable: false
        vbnet_ignore_header_comments:
          type: boolean
          nullable: false
        javascript_max_file_size:
          type: integer
          nullable: false
        javascript_globals:
          type: array
          items:
            type: string
        javascript_environments:
          type: array
          items:
            type: string
        javascript_ignore_header_comments:
          type: boolean
          nullable: false
        cs_roslyn_ignore_issues:
          type: boolean
          nullable: false
        ruby_coverage_report_paths:
          type: string
          nullable: false
        cs_ignore_header_comments:
          type: boolean
          nullable: false
        python_xunit_skip_details:
          type: boolean
          nullable: false
        cs_analyze_generated_code:
          type: boolean
          nullable: false
        python_coverage_report_paths:
          type: string
          nullable: false
        python_xunit_report_path:
          type: string
          nullable: false

    SomethingTableDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        force_authentication:
          type: boolean
          nullable: false
        notifications_delay:
          type: integer
          nullable: false
        built_in_quality_profiles_disable_notification_on_update:
          type: boolean
          nullable: false
        cpd_cross_project:
          type: boolean
          nullable: false
        lf_gravatar_server_url:
          type: string
          nullable: false
        notifications_running_delay_before_reporting_status:
          type: integer
          nullable: false
        scm_disabled:
          type: boolean
          nullable: false
        technical_debt_development_cost:
          type: integer
          nullable: false
        validate_webhooks:
          type: boolean
          nullable: false
        allow_permission_management_for_project_admins:
          type: boolean
          nullable: false
        updatecenter_cache_ttl:
          type: integer
          nullable: false
        qualitygate_ignore_small_changes:
          type: boolean
          nullable: false
        filesize_limit:
          type: integer
          nullable: false
        terraform_activate:
          type: boolean
          nullable: false
        kubernetes_activate:
          type: boolean
          nullable: false
        project_creation_main_branch_name:
          type: string
          nullable: false
          maxLength: 256
        authenticator_downcase:
          type: boolean
          nullable: false
        technical_debt_rating_grid:
          type: string
          nullable: false
        lf_enable_gravatar:
          type: boolean
          nullable: false
        docker_activate:
          type: boolean
          nullable: false
        developer_aggregated_info_disabled:
          type: boolean
          nullable: false
        plugins_risk_consent:
          type: string
          nullable: false
        updatecenter_url:
          type: string
          nullable: false

    BranchIdsDto:
      type: object
      properties:
        branchIds:
          type: array
          items:
            type: string
            format: uuid

    AllSettingsDto:
      type: object
      properties:
        dbCleaner:
          type: array
          items:
            $ref: '#/components/schemas/DbCleanerDto'
        authDto:
          type: array
          items:
            $ref: '#/components/schemas/AuthDto'
        emailDto:
          type: array
          items:
            $ref: '#/components/schemas/EmailDto'
        analyzerCsDto:
          type: array
          items:
            $ref: '#/components/schemas/AnalyzerCsDto'
        analyzerVbnetDto:
          type: array
          items:
            $ref: '#/components/schemas/AnalyzerVbnetDto'
        coreDto:
          type: array
          items:
            $ref: '#/components/schemas/CoreDto'
        cloudformationDto:
          type: array
          items:
            $ref: '#/components/schemas/CloudformationDto'
        suffixesDto:
          type: array
          items:
            $ref: '#/components/schemas/SuffixesDto'
        exclusionsDto:
          type: array
          items:
            $ref: '#/components/schemas/ExclusionsDto'
        languagesSettingsDto:
          type: array
          items:
            $ref: '#/components/schemas/LanguagesSettingsDto'
        somethingTableDto:
          type: array
          items:
            $ref: '#/components/schemas/SomethingTableDto'

    EstimateAnalyzer:
      type: number
      format: double

    PluginsDto:
      type: object
      properties:
        key:
          type: string
          nullable: false
        name:
          type: string
          maxLength: 256
        description:
          type: string
          maxLength: 1024
        version:
          type: string
        license:
          type: string
        organizationName:
          type: string
          maxLength: 256
        organizationUrl:
          type: string
        editionBundled:
          type: boolean
        homepageUrl:
          type: string
        issueTrackerUrl:
          type: string
        implementationBuild:
          type: string
        filename:
          type: string
          maxLength: 256
        hash:
          type: string
        sonarLintSupported:
          type: string
        documentationPath:
          type: string
        updatedAt:
          type: string
          format: timestamp
        pluginsType:
          type: string
          enum:
            - BUNDLED

    PluginsListDto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PluginsDto'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    CreateAnalyzeRequest:
      type: object
      properties:
        repoId:
          type: string

    EnumDto:
      type: array
      items:
        type: string

    ValidLicenseDto:
      type: object
      properties:
        isValidLicense:
          type: boolean

    AutoEstimationDto:
      type: object
      properties:
        autoEstimation:
          type: number
          format: double
    FormDataDto:
      type: object

    HumanReadableSeverities:
      type: object
      properties:
        severityNames:
          type: array
          items:
            type: string
            maxLength: 256

    ProblemFilters:
      type: object
      properties:
        newCode:
          type: boolean
        problemType:
          type: array
          items:
            type: ProblemType
        severity:
          type: array
          items:
            type: Severity
        programmingLanguage:
          type: array
          items:
            type: ProgrammingLanguage
        status:
          type: array
          items:
            type: string
            enum:
              - OPEN
              - CONFIRM
              - RESOLVED
              - REOPENED
              - CLOSED
              - FALSE_POSITIVE
        estimateAnalyzer:
          type: number
          format: double
        startCreatedAt:
          type: string
          format: timestamp
        endCreatedAt:
          type: string
          format: timestamp
        problemName:
          type: string
          maxLength: 256
        branchId:
          type: string
          format: uuid
        taskId:
          type: string
          format: uuid
        problemNumber:
          type: string

    ProblemSmallDto:
      type: object
      properties:
        id:
          type: string
        taskId:
          type: string
          format: uuid

    ProblemSmallDtoList:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProblemSmallDto'

    ShortProblemDto:
      type: object
      properties:
        issueId:
          type: string
        projectId:
          type: string
        repositoryId:
          type: string
        problemName:
          type: string
          maxLength: 256
        fileName:
          type: string
          maxLength: 256
        status:
          type: string
          enum:
            - OPEN
            - CONFIRM
            - RESOLVED
            - REOPENED
            - CLOSED
            - FALSE_POSITIVE
        count:
          type: number
        severity:
          type: string
          enum:
            - BLOCKER
            - MINOR
            - CRITICAL
            - INFO
            - MAJOR
        estimateAnalyzer:
          type: number
        problemType:
          type: string
          enum:
            - CODE_SMELL
            - BUG
            - VULNERABILITY
            - DUPLICATION
            - SECURITY_HOTSPOT
        createdAt:
          type: string
          format: timestamp
        problemNumber:
          type: number

    ShortProjectDto:
      type: object
      properties:
        projectId:
          type: string
          description: Project id
        ownerId:
          type: string
          format: uuid
          description: Owner id
        name:
          type: string
          description: Project name
          maxLength: 256
        description:
          type: string
          description: Project description
          maxLength: 1024

    ShortProjectDtoList:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ShortProjectDto'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    ShortProblemDtoList:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ShortProblemDto'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    ProjectDtoList:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDto'
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        numberOfElements:
          type: number
        first:
          type: boolean
        empty:
          type: boolean

    TaskIdsDto:
      type: object
      properties:
        taskIds:
          type: array
          items:
            type: string
            format: uuid

    TaskToProblemsDto:
      type: object
      properties:
        problemIds:
          type: array
          items:
            type: string
        taskId:
          type: string
          format: uuid

    ShortTaskDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Task id
        name:
          type: string
          maxLength: 256
          description: Task name
        taskNumber:
          type: integer

    RepositoryIdResponse:
      type: object
      properties:
        id:
          type: string
          description: Repository id

    RulesResponse:
      type: object
      properties:
        total:
          type: integer
        p:
          type: integer
          description: The current page number
        ps:
          type: integer
          description: The page size
        rules:
          type: array
          items:
            $ref: '#/components/schemas/RuleResponse'
        actives:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Active'
        qProfiles:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/QProfile'
        paging:
          $ref: '#/components/schemas/Paging'

    RuleResponseMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RuleResponse'

    RuleResponse:
      type: object
      properties:
        key:
          type: string
        repo:
          type: string
        name:
          type: string
          maxLength: 256
        severity:
          type: string
          enum:
            - BLOCKER
            - MINOR
            - CRITICAL
            - INFO
            - MAJOR
        lang:
          type: string
        params:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
            - BUG
            - VULNERABILITY
            - CODE_SMELL
            - SECURITY_HOTSPOT
            - UNKNOWN

    Active:
      type: object
      properties:
        qProfile:
          type: string
        inherit:
          type: string
          enum:
            - NONE
            - INHERITED
            - OVERRIDES
        severity:
          type: string
          enum:
            - BLOCKER
            - MINOR
            - CRITICAL
            - INFO
            - MAJOR
        params:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: timestamp
        updatedAt:
          type: string
          format: timestamp

    QProfile:
      type: object
      properties:
        name:
          type: string
          maxLength: 256
        lang:
          type: string
        langName:
          type: string
          maxLength: 256

    RepositoryRequest:
      type: object
      properties:
        projectIds:
          type: array
          items:
            type: string
        repositoryName:
          type: string
        programmingLanguages:
          type: array
          items:
            type: ProgrammingLanguage
        status:
          type: string

    Paging:
      type: object
      properties:
        pageIndex:
          type: integer
        pageSize:
          type: integer
        total:
          type: integer

    ShortQualityGatesDto:
      type: object
      properties:
        quality_gates_id:
          type: string
          format: uuid
        name:
          type: string

    ShortProfileAnalyzeDto:
      type: object
      properties:
        profileAnalyzeId:
          type: string
          format: uuid
        name:
          type: string
        language:
          type: string

    SeverityQuery:
      type: object
      properties:
        severity:
          type: array
          items:
            type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      in: header

security:
  - bearerAuth: []
